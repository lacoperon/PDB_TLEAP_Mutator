def generate_sh(struct_name):

    script_text = """
#!/bin/bash
# This was autogenerated by `make_equil_script.py` (ask Elliot!)
#BSUB -q amber128
#BSUB -n 2
#BSUB -J /home/weirlab/MDfiles/5JUP_N1/EMIN7/EMIN7_5kc
#BSUB -o out
#BSUB -e err
#BSUB -R "rusage[gpu=1:mem=6144],span[hosts=1]"

## leave sufficient time between job submissions (30-60 secs)
## the number of GPUs allocated matches -n value automatically
## always reserve GPU (gpu=1), setting this to 0 is a cpu job only
## reserve 6144 MB (5 GB + 20%) meory per GPU
## run all processes (1<=n<=4)) on same node (hosts=1).


## note this script is set up to run with sander.MPI and not pmemd.cuda.MPI

############### Job specific variables ##############
SAMPLENAME=5JUP_N1_wat
FIRSTNS=1
FINALNS=10
STARTRESTRAINT=1
ENDRESTRAINT=495

############### GLOBAL VARIABLES (NO NEED TO CHANGE THESE) ####################
#export LD_LIBRARY_PATH=/home/apps/intel/cmkl/10.0.011/lib/em64t:/home/apps/openmpi/1.2+intel-10/lib:$LD_LIBRARY_PATH
#export PATH=/home/apps/openmpi/1.2+intel-10/bin:$PATH
SANDER=/home/apps/amber/10+openmpi-1.2+intel-10/exe/sander
PDBCONV=/home/apps/amber/10+openmpi-1.2+intel-10/exe/ambpdb

export PATH=/home/apps/bin:/cm/local/apps/cuda50/libs/304.54/bin:\
/cm/shared/apps/cuda50/sdk/5.0.35/bin/linux/release:/cm/shared/apps/lammps/cuda/2013-01-27/:\
/cm/shared/apps/amber/amber12/bin:/cm/shared/apps/namd/ibverbs-smp-cuda/2013-06-02/:\
/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/sbin:\
/usr/sbin:/cm/shared/apps/cuda50/toolkit/5.0.35/bin:/cm/shared/apps/cuda50/sdk/5.0.35/bin/linux/release:\
/cm/shared/apps/cuda50/libs/current/bin:/cm/shared/apps/cuda50/toolkit/5.0.35/open64/bin:\
/cm/shared/apps/mvapich2/gcc/64/1.6/bin:/cm/shared/apps/mvapich2/gcc/64/1.6/sbin
export LD_LIBRARY_PATH=/cm/local/apps/cuda50/libs/304.54/lib64:\
/cm/shared/apps/cuda50/toolkit/5.0.35/lib64:/cm/shared/apps/amber/amber12/lib:\
/cm/shared/apps/amber/amber12/lib64:/cm/shared/apps/namd/ibverbs-smp-cuda/2013-06-02/:\
/cm/shared/apps/cuda50/toolkit/5.0.35/lib64:/cm/shared/apps/cuda50/libs/current/lib64:\
/cm/shared/apps/cuda50/toolkit/5.0.35/open64/lib:/cm/shared/apps/cuda50/toolkit/5.0.35/extras/CUPTI/lib:\
/cm/shared/apps/mvapich2/gcc/64/1.6/lib


# unique job scratch dirs
MYSANSCRATCH=/sanscratch/$LSB_JOBID
MYLOCALSCRATCH=/localscratch/$LSB_JOBID
export MYSANSCRATCH MYLOCALSCRATCH

################ Start job ##########################
# First clean out any diagnostic files from a previous run in this dir
cd /home/weirlab/MDfiles/5JUP_N1/EMIN7/EMIN7_5kc

rm temp.out
rm time.log
rm err
rm out
rm mdinfo
rm logfile


############## Initial  Filenames ############################
INPCRD=${SAMPLENAME}.inpcrd
PRMTOP=${SAMPLENAME}.prmtop

#AMBER
#stage the data


################################### MD HEATING STEP ###################################
echo "HEATING starting at " >> time.log
date >> time.log

# BUILD INPUT FILE FOR HEATING STEP: heat.in (MIN OF 2500 STEPS, 1000 SD + 1500 CG), WEAK RESTAINTS ON SAMPLE
echo "${PROJECTNAME}-${SAMPLENAME}: 20ps MD with restraint on molecule" > ${SAMPLENAME}_heat.in	# HEAT.IN COMMENT LINE
echo " &cntrl" >> ${SAMPLENAME}_heat.in							# SET BEGINNING OF &CNTRL NAMELIST
echo "  imin   = 0," >> ${SAMPLENAME}_heat.in						# SET MINIMIZATION FLAG OFF
echo "  irest  = 0," >> ${SAMPLENAME}_heat.in						# SET RESTART FLAG OFF
echo "  ntx    = 1," >> ${SAMPLENAME}_heat.in						# SET COORDINATES, VELOCITIES AND BOX INFORMATION
echo "  ntb    = 1," >> ${SAMPLENAME}_heat.in						# SET CONSTANT VOLUME PERIODIC BOUNDARIES ON
echo "  cut    = 10," >> ${SAMPLENAME}_heat.in						# SET CUTOFF OF 10 ANGSTROMS
echo "  ntr    = 1," >> ${SAMPLENAME}_heat.in						# SET USE POSITION RESTRAINT
echo "  ntc    = 2, ntf = 2," >> ${SAMPLENAME}_heat.in					# SET SHAKE ON
echo "  tempi  = 0.0," >> ${SAMPLENAME}_heat.in						# SET INITIAL TEMPERATURE AS 0.0 KELVIN
echo "  temp0  = 300.0," >> ${SAMPLENAME}_heat.in					# SET FINAL TEMPERATURE AS 300.0 KELVIN
echo "  ntt    = 3, gamma_ln = 1.0," >> ${SAMPLENAME}_heat.in  			# SET LANGEVIN DYNAMICS ON
echo "  nstlim = 10000, dt = 0.002," >> ${SAMPLENAME}_heat.in	 			# SET TOTAL MD STEPS AS 10000 WITH 0.002PS TIME STEP
echo "  ntpr = 1000, ntwx = 1000, ntwr = 10000" >> ${SAMPLENAME}_heat.in		# SET WRITE .OUT & .MDCRD FILE EVERY 1000 STEPS, RESTART FILE EVERY 10000 STEPS
echo " /" >> ${SAMPLENAME}_heat.in								# SET END OF $CNTRL NAMELIST
echo "Keep Molecule fixed with weak restraints" >> ${SAMPLENAME}_heat.in		# HEAT.IN GROUP INPUT COMMENT LINE
echo "10.0" >> ${SAMPLENAME}_heat.in							# SET RESTRAINT WITH FORCE CONSTANT OF 10 KCAL MOL-1 ANGSTROM-2
echo "RES $STARTRESTRAINT $ENDRESTRAINT" >> ${SAMPLENAME}_heat.in			# RESTRAINING  $STARTRESTRAINT TO $ENDRESTRAINT
echo "END" >> ${SAMPLENAME}_heat.in								# END OF GROUP INPUT
echo "END" >> ${SAMPLENAME}_heat.in								# END OF GROUP INPUT

# EXECUTE HEATING STEP USING pmemd ON PTT
lava.mvapich2.wrapper pmemd.cuda.MPI -O -i ${SAMPLENAME}_heat.in -o  ${SAMPLENAME}_heat.out -p ${SAMPLENAME}.prmtop  -c ${SAMPLENAME}_emin11.rst -r  ${SAMPLENAME}_heat.rst -x ${SAMPLENAME}_heat.mdcrd  -ref ${SAMPLENAME}_emin11.rst

#/home/apps/amber/12cpu-only/bin/sander.MPI -O -i ${SAMPLENAME}_heat.in -o  ${SAMPLENAME}_heat.out -p ${SAMPLENAME}.prmtop  -c ${SAMPLENAME}_emin6.rst -r  ${SAMPLENAME}_heat.rst -x ${SAMPLENAME}_heat.mdcrd  -ref ${SAMPLENAME}_emin6.rst


${PDBCONV} -p ${SAMPLENAME}.prmtop < ${SAMPLENAME}_heat.rst > ${SAMPLENAME}_heat.rst.pdb
echo "Heating step completed" >> time.log

################################### MD EQUILIBRATION AND PRODUCTION STEPS ###################################
echo "MD EQUILIBRATION starting at " >> time.log
date >> time.log

# BUILD INPUT FILE FOR EQUILIBRATION STEP OF 1 NS: equil.in
# 5JUP_562_580_wat_equil.in ALREADY EXISTS IN THE DIRECTORY INCLUDING END RESIDUE RESTRAINTS

#echo "${PROJECTNAME}-${SAMPLENAME}: 1000ps MD" > ${SAMPLENAME}_equil.in	# EQUIL.IN COMMENT LINE
#echo " &cntrl" >> ${SAMPLENAME}_equil.in						# SET BEGINNING OF &CNTRL NAMELIST
#echo "  imin = 0," >> ${SAMPLENAME}_equil.in					# SET MINIMIZATION FLAG OFF
#echo "  irest = 1," >> ${SAMPLENAME}_equil.in 					# SET RESTART FLAG ON
#echo "  ntx = 7," >> ${SAMPLENAME}_equil.in					# SET COORDINATES, VELOCITIES AND BOX INFORMATION FROM ASCII RESTRT FILE
#echo "  ntb = 2," >> ${SAMPLENAME}_equil.in 					# SET CONSTANT VOLUME PERIODIC BOUNDARIES ON
#echo "  pres0 = 1.0," >> ${SAMPLENAME}_equil.in 					# SET AVERAGE PRESSURE OF 1 ATM
#echo "  ntp = 1," >> ${SAMPLENAME}_equil.in					# SET ISOTROPIC POSITION SCALING ON TO MAINTAIN PRESSURE
#echo "  taup = 2.0," >> ${SAMPLENAME}_equil.in					# SET RELAXATION TIME OF 2PS
#echo "  cut = 10," >> ${SAMPLENAME}_equil.in					# SET CUTOFF OF 10 ANGSTROMS
#echo "  ntr = 0," >> ${SAMPLENAME}_equil.in					# SET USE POSITION RESTRAINT FALSE
#echo "  ntc = 2, ntf = 2," >> ${SAMPLENAME}_equil.in				# SET SHAKE ON
#echo "  tempi = 300.0," >> ${SAMPLENAME}_equil.in 				# SET INITIAL TEMPERATURE AS 300.0 KELVIN
#echo "  temp0 = 300.0," >> ${SAMPLENAME}_equil.in				# SET FINAL TEMPERATURE AS 300.0 KELVIN
#echo "  ntt = 1,"  >> ${SAMPLENAME}_equil.in					# SET {TPN} ENSEMBLE NEWTONIAN MD ON
#echo "  nstlim = 500000, dt = 0.002," >> ${SAMPLENAME}_equil.in		# SET TOTAL MD STEPS AS 500000 WITH 0.002PS TIME STEP
#echo "  ntpr = 1000, ntwx = 1000, ntwr = 10000," >> ${SAMPLENAME}_equil.in 	# SET WRITE .OUT & .MDCRD FILE TO 1000 STEPS, RESTART FILE EVERY 10000 STEPS
#echo  "  iwrap = 1" >> ${SAMPLENAME}_equil.in
#echo " /" >> ${SAMPLENAME}_equil.in						# SET END OF $CNTRL NAMELIST

################ Main MD Loop ##########################
MYI=0
i=$MYI
echo $i >> temp.out
echo ${MYI} >> temp.out
echo ${FINALNS} >> temp.out

while [ $i -lt "${FINALNS}" ] ; do
	echo " " >> temp.out
	echo " variable i = ${i} " >> temp.out

	k=`expr ${i} + 1`
	echo " variable k = $k" >> temp.out

#      ####### More  Filenames ############################
	INPUT=${SAMPLENAME}_equil.in
	OUTPUT=${SAMPLENAME}_equil.${k}.out
	RESTART=${SAMPLENAME}_equil.${k}.rst
	RESTFRHT=${SAMPLENAME}_heat.rst
	COORD=${SAMPLENAME}_equil.${k}.mdcrd
	PDB=${SAMPLENAME}_equil.${k}.pdb

	if [ $k = 1 ];
		then
              echo "in first pass" >> temp.out

# 		EXECUTE FIRST NS BLOCK OF PTT MD ON
       	lava.mvapich2.wrapper pmemd.cuda.MPI -O -i ./5JUP_N1_wat_equil.in -o ${OUTPUT} -p ${PRMTOP} -c ${RESTFRHT} -r ${RESTART} -x ${COORD} -ref ${SAMPLENAME}_heat.rst
#       	lava.mvapich2.wrapper pmemd.cuda.MPI -O -i ${INPUT} -o ${OUTPUT} -p ${PRMTOP} -c ${RESTFRHT} -r ${RESTART} -x ${COORD}

       	${PDBCONV} -p ${PRMTOP} < ${RESTART} > ${PDB}
	gzip ${COORD}

		else
              echo "in second pass" >> temp.out

#  		EXECUTE ALL SUBSEQUENT NS OF PTT MD IN 1 NS BLOCKS
       	RESTFROM=${SAMPLENAME}_equil.${i}.rst
       	lava.mvapich2.wrapper pmemd.cuda.MPI -O -i ./5JUP_N1_wat_equil.in -o ${OUTPUT} -p ${PRMTOP} -c ${RESTFROM} -r ${RESTART} -x ${COORD} -ref ${RESTFROM}
#       	lava.mvapich2.wrapper pmemd.cuda.MPI -O -i ${INPUT} -o ${OUTPUT} -p ${PRMTOP} -c ${RESTFROM} -r ${RESTART} -x ${COORD}
       	${PDBCONV} -p ${PRMTOP} < ${RESTART} > ${PDB}
	gzip ${COORD}
	fi

i=`expr ${i} + 1`

echo "MD EQUILIBRATION & ANALYSIS STEP $k completed at " >> time.log
date >> time.log

done

    """.format(struct_name, struct_name.upper())

    f = open("EMIN/run_emin.sh", "w")
    f.write(script_text)

if __name__ == "__main__":
    generate_sh("5jup_gc")
